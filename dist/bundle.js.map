{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAO;AACP;AACA,iDAAiD,UAAU;;AAE3D;AACA;;AAEA,uDAAuD,SAAS;AAChE,sDAAsD,UAAU,IAAI;;AAEpE;;AAEA;AACA;;AAEA,YAAY,mBAAmB;AAC/B,YAAY,cAAc;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2DAA2D;AAC3D,8DAA8D;AAC9D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4DAA4D,SAAS;AACrE,2DAA2D,UAAU;AACrE;AACA,MAAM;AACN;;;;;;;;;;;;;;;;AC7C2C;;AAEpC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAS;AACb,GAAG;AACH;AACA;;AAEA,YAAY,YAAY;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wDAAwD;AACxD;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,+BAA+B,UAAU;;AAEzC;AACA;;AAEA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjFA,WAAW,aAAa;AACmB;AACI;AACL;AACqB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,oDAAc;;AAExD;AACA;AACA;;AAEA,kBAAkB,uDAAY;AAC9B;;AAEA,cAAc,2DAAgB;AAC9B,6BAA6B,0DAAe;AAC5C,yBAAyB,uDAAY;;AAErC;AACA,wBAAwB,4DAAc;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,kDAAkD,QAAQ;AAC1D;AACA,KAAK,EAAE,QAAQ;;AAEf;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,KAAK;AACL,GAAG;AACH;;AAEA,cAAc,aAAa;AAC3B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,eAAe;AAC3B,YAAY,oCAAoC;AAChD,YAAY,mBAAmB;;AAE/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;;AAEJ;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;;;;;;;;;;;;;;;;;AC9QO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UChCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNqB;AACsB;;AAE3C;AACA,EAAE,wDAAc;AAChB;AACA","sources":["webpack://third-part/./src/style.css?e320","webpack://third-part/./src/gamecard.js","webpack://third-part/./src/menu.js","webpack://third-part/./src/startgame.js","webpack://third-part/./src/utils.js","webpack://third-part/webpack/bootstrap","webpack://third-part/webpack/runtime/define property getters","webpack://third-part/webpack/runtime/hasOwnProperty shorthand","webpack://third-part/webpack/runtime/make namespace object","webpack://third-part/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export const createGameCard = (backface, frontface) => {\n  const cards = document.createElement(\"div\");\n  cards.classList.add(\"game__card\", `frontface-${frontface}`);\n\n  const flippedCard = document.createElement(\"i\");\n  const notFlippedCard = document.createElement(\"i\");\n\n  notFlippedCard.classList.add(\"backface\", `backface-${backface}`);\n  flippedCard.classList.add(\"frontface\", `frontface-${frontface}`); //?\n\n  cards.append(flippedCard, notFlippedCard);\n\n  return cards;\n};\n\n// import { initialCardIcons } from \"./cards.js\";\n// import { gameSection } from \"./startgame.js\";\n\n// export const createGameCard = () => {\n//   //const arrayCards = initialCardIcons;\n//   initialCardIcons.forEach((icon) => {\n//     const gameCardList = document.createElement(\"div\");\n//     gameCardList.classList.add(\"game__card_list\");\n\n//     gameSection.appendChild(gameCardList);\n//     // gameCardList.append(notFlippedCard, flippedCard);\n//     gameCardList.setAttribute('name', icon.name)\n\n//     const cards = document.createElement(\"div\");\n//     cards.classList.add(\"game__card\");\n\n//     // const flippedCard = document.createElement(\"i\"); // img?\n//     // const notFlippedCard = document.createElement(\"i\"); // img?\n//     const flippedCard = document.createElement(\"img\");\n//     const notFlippedCard = document.createElement(\"img\");\n//     // notFlippedCard.classList.add(\"backface\", 'back');\n//     // flippedCard.classList.add(\"frontface\", 'front');\n\n//     flippedCard.src = icon.imgSrc;\n//     notFlippedCard.src = '/static/shirt.png'\n\n//     notFlippedCard.classList.add(\"backface\", `backface-${backface}`);\n//     flippedCard.classList.add(\"frontface\", `frontface-${icon.name}`);\n//     cards.append(flippedCard, notFlippedCard);\n//   });\n// };\n","import { startGame } from \"./startgame.js\";\n\nexport const createGameMenu = () => {\n  const appEl = document.querySelector(\".game__section\");\n\n  const menuHtml = `       \n        <div class=\"choice-box\">\n            <h1 class=\"title\">Выбери сложность</h1>\n            <form class=\"complex\">\n                <input name=\"diff\" id=\"difficultChoice1\" class=\"complex__num\" type=\"radio\" value=\"1\"/>\n                <label for=\"difficultChoice1\">1</label>\n                <input name=\"diff\" id=\"difficultChoice2\" class=\"complex__num\" type=\"radio\" value=\"2\"/>\n                <label for=\"difficultChoice2\">2</label>\n                <input name=\"diff\" id=\"difficultChoice3\" class=\"complex__num\" type=\"radio\" value=\"3\"/>\n                <label for=\"difficultChoice3\">3</label>\n            </form>\n            <button id=\"startBtn\" class=\"start-btn\">Старт</button>\n        </div>`;\n\n  appEl.innerHTML = menuHtml;\n\n  const radioChoiceElemenet = document.querySelectorAll(\n    `input[type=radio][name=\"diff\"]`\n  );\n  const startElement = document.getElementById(\"startBtn\");\n  let diff = 0;\n\n  radioChoiceElemenet.forEach((radio) =>\n    radio.addEventListener(\"change\", () => {\n      diff = radio.value;\n    })\n  );\n\n  startElement.addEventListener(\"click\", () => {\n    if (!diff) {\n      alert(\"Выберите сложность!\");\n      return;\n    }\n    startGame(diff);\n  });\n};\ncreateGameMenu();\n\n// import { startGame } from \"./startgame.js\";\n\n// export const createGameMenu = () => {\n//   const startGameMenu = document.createElement(\"div\");\n//   startGameMenu.classList.add(\"game__section_start\");\n\n//   const title = document.createElement(\"h2\");\n//   title.classList.add(\"game__section_title\");\n//   title.textContent = \"Выберите уровень сложности\";\n\n//   const gameButtons = document.createElement(\"div\"); // отдельный контейнер для кнопок, для удобства\n//   gameButtons.classList.add(\"game__section_button\");\n\n//   const gameSection = document.querySelector(\".game__section\");\n//   gameSection.innerHTML = \"\"; // очищение DOM после выбора сложности\n\n//   const createDifficultButton = (difficult) => {\n//     const button = document.createElement(\"button\");\n//     button.classList.add(\"game__btn\");\n//     button.textContent = `${difficult}`;\n\n//     button.addEventListener('click', () => startGame(difficult));\n//     return button;\n\n//     // button.addEventListener(\"submit\", function(event) {\n//     //   event.preventDefault()\n//     // })\n\n//   };\n\n//   startGameMenu.append(title, gameButtons);\n//   gameButtons.append(\n//     createDifficultButton(1),\n//     createDifficultButton(2),\n//     createDifficultButton(3)\n//   );\n//   gameSection.append(startGameMenu);\n// };\n// createGameMenu();\n","//import { winnerGame } from \"./confetti.js\";\nimport { createGameMenu } from \"./menu.js\";\nimport { createGameCard } from \"./gamecard.js\";\nimport { shuffleArray } from \"./utils.js\";\nimport { createFrontCards, duplicatedArray } from \"./utils.js\";\n\nconst initialCardIcons = [\n  \"6p\",\n  \"7p\",\n  \"8p\",\n  \"9p\",\n  \"10p\",\n  \"Qp\",\n  \"Kp\",\n  \"Jp\",\n  \"Ap\",\n  \"6h\",\n  \"7h\",\n  \"8h\",\n  \"9h\",\n  \"10h\",\n  \"Qh\",\n  \"Kh\",\n  \"Jh\",\n  \"Ah\",\n  \"6c\",\n  \"7c\",\n  \"8c\",\n  \"9c\",\n  \"10c\",\n  \"Qc\",\n  \"Kc\",\n  \"Jc\",\n  \"Ac\",\n  \"6b\",\n  \"7b\",\n  \"8b\",\n  \"9b\",\n  \"10b\",\n  \"Qb\",\n  \"Kb\",\n  \"Jb\",\n  \"Ab\",\n];\n\nexport const startGame = (difficult) => {\n  let firstCard = null;\n  let secondCard = null;\n  let clickable = true;\n\n  const timerString = document.createElement(\"div\");\n  timerString.textContent = \"Время\";\n  timerString.classList.add(\"timer\");\n\n  const restartButton = document.createElement(\"button\");\n  restartButton.textContent = \"Начать заново\";\n  restartButton.classList.add(\"restart__button\");\n  restartButton.addEventListener(\"click\", createGameMenu);\n\n  const gameSection = document.querySelector(\".game__section\");\n  const gameCardList = document.createElement(\"div\");\n  gameCardList.classList.add(\"game__card_list\");\n\n  let cardIcons = shuffleArray(initialCardIcons);\n  gameSection.innerHTML = \"\";\n\n  cardIcons = createFrontCards(difficult, cardIcons);\n  let duplicatedCardsIcons = duplicatedArray(cardIcons);\n  duplicatedCardsIcons = shuffleArray(duplicatedCardsIcons);\n\n  duplicatedCardsIcons.forEach((icon) =>\n    gameCardList.append(createGameCard(\"shirt\", icon))\n  );\n\n  gameSection.append(restartButton, gameCardList, timerString);\n\n  const cards = document.querySelectorAll(\".game__card\");\n  const flipStartCard = () => {\n    cards.forEach((card) => {\n      card.classList.add(\"flip\");\n      setTimeout(() => {\n        card.classList.remove(\"flip\");\n      }, 5000);\n    });\n  };\n\n  flipStartCard();\n\n  let countdownTime = 3 * 60 * 1000;\n\n  const timerElement = document.querySelector(\".timer\");\n\n  const countdown = setInterval(() => {\n    const minutes = Math.floor(countdownTime / 60000);\n    const seconds = ((countdownTime % 60000) / 1000).toFixed(0);\n\n    timerElement.innerHTML = `Оставшееся время: ${minutes}:${\n      seconds < 10 ? \"0\" : \"\"\n    }${seconds}`;\n\n    countdownTime -= 1000;\n\n    if (countdownTime < 0) {\n      clearInterval(countdown);\n      timerElement.innerHTML = \"Время вышло!\";\n    }\n  }, 1000);\n\n  cards.forEach((card, index) => {\n    card.addEventListener(\"click\", () => {\n      if (clickable === true && !card.classList.contains(\"successfully\")) {\n        card.classList.add(\"flip\");\n      }\n      if (firstCard === null) {\n        firstCard = index;\n      } else {\n        if (index !== firstCard) {\n          secondCard = index;\n          clickable = false;\n        }\n      }\n      if (\n        firstCard !== null &&\n        secondCard !== null &&\n        firstCard !== secondCard\n      ) {\n        if (\n          cards[firstCard].firstElementChild.className ===\n          cards[secondCard].firstElementChild.className\n        ) {\n          setTimeout(() => {\n            cards[firstCard].classList.add(\"successfully\");\n            cards[secondCard].classList.add(\"successfully\");\n\n            firstCard = null;\n            secondCard = null;\n            clickable = true;\n          }, 500);\n        } else {\n          setTimeout(() => {\n            cards[firstCard].classList.remove(\"flip\");\n            cards[secondCard].classList.remove(\"flip\");\n\n            firstCard = null;\n            secondCard = null;\n            clickable = true;\n          }, 500);\n        }\n      }\n      if (Array.from(cards).every((card) => card.className.includes(\"flip\"))) {\n        //document.querySelector(\".winner__confetti\").innerHTML = winnerGame;\n        alert(\"Вы победили!\"); // доделать\n      }\n    });\n  });\n};\n\n// //import { winnerGame } from \"./confetti.js\";\n// import { createGameMenu } from \"./gameMenu.js\";\n// import { createGameCard } from \"./gamecard.js\";\n// import { shuffleArray } from \"./utils.js\";\n// import { createFrontCards, duplicatedArray } from \"./utils.js\";\n// import { initialCardIcons } from \"./cards.js\";\n\n// export const gameSection = document.querySelector(\".game__section\");\n\n// export const startGame = (difficult) => {\n//   let firstCard = null;\n//   let secondCard = null;\n//   let clickable = true;\n\n//   const headerElements = document.createElement(\"div\");\n//   headerElements.classList.add(\"header\");\n//   const restartButton = document.createElement(\"button\");\n//   restartButton.textContent = \"Начать заново\";\n//   restartButton.classList.add(\"restart__button\");\n//   restartButton.addEventListener(\"click\", createGameMenu);\n//   const timer = document.createElement(\"p\");\n//   timer.classList.add(\"timer\");\n//   timer.textContent = \"00.00\";\n//   headerElements.append(restartButton, timer);\n\n//   const gameCardList = document.createElement(\"div\");\n//   gameCardList.classList.add(\"game__card_list\");\n\n//   let cardIcons = shuffleArray(initialCardIcons);\n//   cardIcons = createFrontCards(difficult, cardIcons);\n//   gameSection.innerHTML = \"\";\n\n//   let duplicatedCardsIcons = duplicatedArray(cardIcons);\n//   duplicatedCardsIcons = shuffleArray(duplicatedCardsIcons);\n\n//   gameCardList.addEventListener('click', () => {\n//   initialCardIcons.forEach((icon) => {\n//     // const gameCardList = document.createElement(\"div\");\n//     // gameCardList.classList.add(\"game__card_list\");\n\n//     const cards = document.createElement(\"div\");\n//     cards.classList.add(\"game__card\");\n\n//     const flippedCard = document.createElement(\"img\");\n//     const notFlippedCard = document.createElement(\"img\");\n//     notFlippedCard.classList.add(\"backface\", \"back\");\n//     flippedCard.classList.add(\"frontface\", \"front\");\n\n//     flippedCard.src = icon.imgSrc;\n//     notFlippedCard.src = \"/static/shirt.png\";\n\n//     gameSection.appendChild(gameCardList);\n//     gameCardList.append(notFlippedCard, flippedCard);\n//     flippedCard.setAttribute(\"name\", icon.name);\n//     cards.append(notFlippedCard, flippedCard)\n//   });\n// })\n\n//   // duplicatedCardsIcons.forEach((icon) => {\n//   //   gameCardList.append(createGameCard(\"shirt\", icon))\n//   // });\n\n//   gameSection.append(headerElements, gameCardList);\n\n//   const cards = document.querySelectorAll(\".game__card_list\");\n//   cards.forEach((card, index) => {\n//     //условия при переворачивании карт\n//     card.addEventListener(\"click\", () => {\n//       if (clickable === true && !card.classList.contains(\"successfully\")) {\n//         card.classList.add(\"flip\");\n//       }\n//       if (firstCard === null) {\n//         firstCard = index;\n//       } else {\n//         if (index !== firstCard) {\n//           secondCard = index;\n//           clickable = false; // запрещаем разворот более 2х карт\n//         }\n//       }\n//       if (\n//         firstCard !== null &&\n//         secondCard !== null &&\n//         firstCard !== secondCard\n//       ) {\n//         if (\n//           cards[firstCard].firstElementChild.className ===\n//           cards[secondCard].firstElementChild.className\n//         ) {\n//           setTimeout(() => {\n//             cards[firstCard].classList.add(\"successfully\");\n//             cards[secondCard].classList.add(\"successfully\");\n\n//             firstCard = null;\n//             secondCard = null;\n//             clickable = true;\n//           }, 500);\n//         } else {\n//           setTimeout(() => {\n//             cards[firstCard].classList.remove(\"flip\");\n//             cards[secondCard].classList.remove(\"flip\");\n\n//             firstCard = null;\n//             secondCard = null;\n//             clickable = true;\n//           }, 500);\n//         }\n//       }\n//       // if (Array.from(cards).every((card) => card.className.includes(\"flip\"))) {\n//       //   //document.querySelector(\".winner__confetti\").innerHTML = winnerGame;\n//       //   alert(\"Вы победили!\");\n//     //   }\n//     });\n//   });\n// };\n","export const shuffleArray = (array) => {\n  console.log(array);\n  let currentIndex = array.length,\n    randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n};\n\nexport const duplicatedArray = (array) =>\n  array.reduce((res, current) => res.concat([current, current]), []);\n\nexport const createFrontCards = (initialDiff, array) => {\n  initialDiff = +initialDiff;\n  switch (initialDiff) {\n    case 1:\n      return array.slice(0, 3);\n    case 2:\n      return array.slice(0, 6);\n    case 3:\n      return array.slice(0, 9);\n    default:\n      break;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./style.css\";\nimport { createGameMenu } from \"./menu.js\";\n\nconst cardsApp = () => {\n  createGameMenu();\n};\ncardsApp();\n"],"names":[],"sourceRoot":""}